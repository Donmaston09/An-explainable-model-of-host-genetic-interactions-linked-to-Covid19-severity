#!/data/SW/anaconda3/envs/myenv/bin/python


import os, sys
import pandas as pd
import numpy as np
import matplotlib as mpl
mpl.use('Agg')
import matplotlib.pyplot as plt
from matplotlib.ticker import*
from matplotlib import pyplot as plt
from mpl_toolkits.axes_grid import make_axes_locatable
from mpl_toolkits import *
from matplotlib import cm



df1=pd.read_csv("variant_stat_xgb_w1_genes_pos_pathways.txt", dtype=object, sep="\t")
df2=pd.read_csv("variant_stat_xgb_w1_genes_neg_pathways.txt", dtype=object, sep="\t")


cutoff=15
#df_sort=df.sort_values(by = 'FDR_x') 
path1=df1['GeneSet'][:cutoff].iloc[::-1]
path1=[p[:-3] for p in path1]
path2=df2['GeneSet'][:cutoff].iloc[::-1]
path2=[p[:-3] for p in path2][::-1]


adjp_1=-np.log10(df1['FDR'].astype(float))[:cutoff].iloc[::-1]


adjp_2=(-(-np.log10(df2['FDR'].astype(float))[:cutoff].iloc[::-1]))[::-1]


path=path2+path1

#print (adjp_1)
#for ii in range(len(path)):
#	print (path[ii], adjp_1[ii], adjp_2[ii])

ind2 = np.arange(len(path2))  # the x locations for the groups
ind1 = np.arange(len(path2),len(path1)+len(path2))  # the x locations for the groups
#print (len(ind1), len(ind2))
width = 0.7      # the width of the bars
fig = plt.figure(figsize=(20,15))

ax0 = fig.add_axes([0.55, 0.1,0.4,0.8])
ax0.barh(ind2, adjp_2, width, color="dodgerblue", edgecolor="gray", linewidth=0.1)
ax0.barh(ind1, adjp_1, width, color="tomato", edgecolor="gray", linewidth=0.1)

major_ticksy = np.arange(0, len(path), 1)
minor_ticksy=[]
for t in major_ticksy:
  minor_ticksy.append(t+0.5)                                            
ax0.set_yticks(major_ticksy)

ylab=[]
for p in path:
  print (p)
  if p.find('HDR through Homologous Recombination (HRR) or Single Strand Annealing (SSA)') != -1:
    ylab.append(p.replace('HDR through Homologous Recombination (HRR) or Single Strand Annealing (SSA)', 'HDR through HRR or SSA'))
  else:
    ylab.append(p)

#ax0.set_yticklabels(ylab, horizontalalignment = "left")
ax0.set_yticklabels(ylab)

ax0.tick_params(axis='x', which='major', labelsize=27.5, pad=15)
ax0.tick_params(axis='y', which='major', labelsize=28, direction="in")
ax0.spines['top'].set_visible(True)
ax0.spines['right'].set_visible(False)
ax0.spines['bottom'].set_visible(False)
ax0.spines['top'].set_linewidth(3)
ax0.spines['left'].set_visible(True)
ax0.spines['left'].set_linewidth(3)
ax0.yaxis.set_ticks_position('left')
ax0.xaxis.set_ticks_position('top')


plt.draw()
#plt.savefig('%s.eps' % (sys.argv[1][:-4]))
#plt.savefig('%s.png' % (sys.argv[1][:-4]))
plt.savefig('staggered_histo.eps')
plt.savefig('staggered_histo.png')
plt.savefig('staggered_histo.pdf', format="pdf", bbox_inches="tight")


